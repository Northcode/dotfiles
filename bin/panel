#!/bin/bash

fifo=/tmp/panfifo
bspcpidf=/run/user/1000/bspc.pid
pidfile=/run/user/1000/panel_output.pid

conf_col_active=\#902222
conf_col_inactive=\#888888
conf_col_btn=\#8888ff
conf_col_foreground=\#efefef
conf_col_background=\#303030

conf_geometry="330x25+25+10"
conf_font="-*-terminus-medium-r-*-*-12-*-*-*-*-*-iso10646-*"

for kv in $(xrdb -query | grep panel. | cut -c7- | while read -r c; do
		key=$(echo $c | cut -d ':' -f 1)
		val=$(echo $c | cut -d ':' -f 2- | sed -e "s/^\s*//" | sed -e "s/\s*$//g")
		echo $key":"$val
	    done); do

    key=$(echo $kv | cut -d ':' -f 1 | tr \. _)
    val=$(echo $kv | cut -d ':' -f 2)

    declare conf_$key=$val

    echo conf_$key":"$val
done


lemonbar_conf="-g $conf_geometry -B $conf_col_background -F $conf_col_foreground -f $conf_font"

if [ -f $pidfile ]; then
    running=true
else
    running=false
fi

function print_clock {
    date +C%H:%M:%S
}

function print_battery {
    echo "B"$(cat /sys/class/power_supply/BAT0/capacity)
}

function update_output {
    while true; do
	print_clock
	print_battery

	sleep 1
    done
}

function stop {
    echo "stopping panel.."
    
    # if pidfile exists, kill process and remove file
    if $running; then
	pkill -F $pidfile
	rm $pidfile
    fi

    if [ -f $bspcpidf ]; then
	pkill -F $bspcpidf
	rm $bspcpidf
    fi

    #delete fifo
    rm $fifo

    running=false
}

function reader {
    while read -r line; do
	case $line in
	    B*)
		#battery
		bat_info=${line#?}
	    ;;
	    C*)
		#clock
		clock_info=${line#?}
	    ;;
	    W*)
		wm_info=""
		line=${line#?}
		IFS=':'
		set -- ${line#?}
		while [ $# -gt 0 ]; do
		# for item in "${line[@]}"; do
		    item=$1
		    name=${item#?}
		    case $item in
			O*|F*)
			    #selected desktop
			    wm_info="$wm_info %{F$conf_col_active}$name%{F-} "
			;;
			o*|f*)
			    #other desktop
			    wm_info="$wm_info %{A:switch_$name:}%{F$conf_col_inactive}${item#?}%{F-A} "
			;;
		    esac
		    shift
		done
		;;
	esac

	printf "%s\n" "${l}$wm_info  $clock_info  $bat_info %{F$conf_col_btn}%{A:suspend:} susp %{A}%{F-} %{F$conf_col_btn}%{A:logout:} bye %{A}%{F-} %{A:rand-wall:}%{F$conf_col_btn}rwall%{AF-}"
    done
}

function command_reader {
    while read -r command; do
	case $command in
	    suspend)
		systemctl suspend
		;;
	    logout)
		stop
		bspc quit
		;;
	    rand-wall)
		~/bin/rand-wall
		;;
	    switch_*)
		desk=$(echo $command | cut -c 8-)
		bspc desktop -f $desk
		;;
	esac
    done
}

function init {
    if $running; then
	echo "already running... doing nothing..."
	exit
    fi

    if [ ! -f $fifo ]; then
	mkfifo $fifo
    fi

    echo "starting panel..."

    bspc subscribe > $fifo &
    echo $! > $bspcpidf
    update_output > $fifo &
    echo $! > $pidfile

    cat $fifo | reader | lemonbar $lemonbar_conf | command_reader &
}


if [ "$1" = "stop" ]; then
    stop
    exit
elif [ "$1" = "restart" ]; then
    stop
fi
init

